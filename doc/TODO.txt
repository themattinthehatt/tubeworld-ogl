TODO:
- use shader class in skybox
- use shader class in SimpleShapes
- bloom on TextureCylinderLight class
- make SmoothRandomWalker class
- use SmoothRandomWalker class in PathRandom class
- light intensity guided by random walk rather than sinusoid (make option)
- move to HDR lighting in TextureCylinderLight
- fix aliasing issues in textures rendered to offscreen framebuffer/can dot mode
  and line mode be used when rendering to offscreen buffer?
- turn PerlinBlockLight into a base class; have PerlinBlockLight and Light class 
  from TubeTextureLight derive from it
- make input struct to TextureCylinderLight
    *tubeRadius             [10.f]
    *tubeLength             [2.f]
    *textureType            [TEXTURE_RAINBOW]
    *numTextures            100
    *grayscaleTex           [false]
    *noise properties (could this go somewhere else?)
        *interpLinear       [true]
        *woodGrain          [false]
        *mirrorTex          [true]
    *lighting properties
        *lightStyle         [LIGHTSTYLE_POINT]
        *thresh_val         [0]
        *lampColorMax       (1.f, 1.f, 0.8f)
        *lightAmbientMax    (0.5)
        *lightDiffuseMax    (1.f)
        *lightSpecularMax   (1.f)
        *lightAttLin        (0.022f)
        *lightAttQuad       (0.0019f)
        *lightIntensity     (1.f)            

- (DONE 01/29/17) add (sun)light to island
- (DONE 01/29/17) make first round of perlin-block updates - put island 
    generation (block centers and model matrices) in own function to be called 
    from constructor
- (DONE 01/14/17) make first pass at portal class
- (DONE 01/14/16) update tubetravellers - render to offscreen buffer, change
    counters to seconds, fade in/out
- (DONE 01/11/16) update sketch - render to offscreen framebuffer, change 
    counters, fade in/out
- (DONE 01/11/16) change island counters to seconds instead of frames
- (DONE 01/11/16) create offscreen framebuffer class
